@model ClubsModule.Models.ClubEditModel
@inject IAuthorizationService Auth
@inject ManagerLocalizer Localizer
@inject HeroesCup.Localization.ManagerLocalizer HeroesCupLocalizer
@{
    ViewBag.Title = "Edit club";
    ViewBag.MenuItem = HeroesCupLocalizer.Club["Clubs"];

    var heroes = Model.Heroes != null && Model.Heroes.Count() > 0 ? Model.Heroes : new List<HeroesCup.Data.Models.Hero>();
    var heroesMultipleSelectList = new MultiSelectList(heroes, "Id", "Name");
    var heroesSelectList = new SelectList(heroes, "Id", "Name");
}

@section script{
    @*<link src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />*@
    <script src="https://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>
    <script src="/manager/clubsmodule/js/multiselect.js"></script>
    <script src="/manager/clubsmodule/js/validation-modal.js"></script>
    <script src="/manager/clubsmodule/js/mission-location-autocomplete.js" type="text/javascript"></script>
}

@using (var form = Html.BeginForm("Save", "Clubs", FormMethod.Post, new { @class = "form validate", role = "form", novalidate = "", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Club.Id)
    @Html.HiddenFor(m => m.Club.OwnerId)

    <div class="top">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">@HeroesCupLocalizer.Club["Clubs"]</li>
                <li class="breadcrumb-item" aria-current="page"><a href="@Url.Action("List")">@HeroesCupLocalizer.Club["Clubs"]</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Localizer.General["Edit"]</li>
            </ol>
        </nav>

        <div class="container-fluid">
            <div class="top-nav">
                @if ((await Auth.AuthorizeAsync(User, ClubsModule.Permissions.ClubsSave)).Succeeded)
                {
                    <button type="submit" class="btn btn-labeled btn-success pull-right">
                        <span class="btn-label">
                            <i class="fas fa-check"></i>
                        </span>
                        @Localizer.General["Save"]
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <span class="title">@Localizer.General["General"]</span>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Name"]</label>
                            @Html.TextBoxFor(m => m.Club.Name, new { @class = "form-control small", maxlength = 128, required = "" })
                            <div class="invalid-tooltip">
                                @HeroesCupLocalizer.Club["Name is mandatory."]
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Location"]</label>
                            @Html.TextBoxFor(m => m.Club.Location, new { @class = "form-control small", maxlength = 128, required = "", @id="location" })
                            <div class="invalid-tooltip">
                                @HeroesCupLocalizer.Club["Location is mandatory."]
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Organization Number"]</label>
                            @Html.TextBoxFor(m => m.Club.OrganizationNumber, new { @class = "form-control small", maxlength = 128 })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Organization Type"]</label>
                            @Html.TextBoxFor(m => m.Club.OrganizationType, new { @class = "form-control small", maxlength = 128, required = "", placeholder = @HeroesCupLocalizer.Club["Type Suggestion"] })
                            <div class="invalid-tooltip">
                                @HeroesCupLocalizer.Club["Organization Type is mandatory."]
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Organization Name"]</label>
                            @Html.TextBoxFor(m => m.Club.OrganizationName, new { @class = "form-control small", maxlength = 128, required = "" })
                            <div class="invalid-tooltip">
                                @HeroesCupLocalizer.Club["Organization Name is mandatory."]
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Description"]</label>
                            @Html.TextAreaFor(m => m.Club.Description, new { @class = "form-control small", maxlength = 500, required = "" })
                            <div class="invalid-tooltip">
                                @HeroesCupLocalizer.Club["Description is mandatory."]
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@HeroesCupLocalizer.Club["Logo"]</label>
                            <p class="small"> @HeroesCupLocalizer.Club["Image Suggestion"]</p>
                            <div class="row col-12">
                                <div class="col-6">
                                    @if (Model.ClubImageId != null)
                                    {
                                        <img src="/images/@Model.ClubImageId" alt="Club Logo">
                                    }
                                    else
                                    {
                                        <img src="~/manager/clubsmodule/images/team_no_image.png" alt="Club Logo">
                                    }
                                </div>
                                <div class="col-6">
                                    <input type="file" asp-for="UploadedLogo" class="form-control-file" contextmenu="@HeroesCupLocalizer.General["Choose file"]" placeholder="@HeroesCupLocalizer.General["Choose file"]" />
                                    @Html.ValidationMessageFor(model => model.UploadedLogo, "", new { @class = "text-danger invalid-tooltip" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        @if (heroesSelectList.Count() > 0)
                        {
                            <div class="form-group">
                                @if (Model.CoordinatorsIds != null)
                                {
                                    <label>@HeroesCupLocalizer.Club["Coordinators"]</label>
                                }
                                else
                                {
                                    <label>@HeroesCupLocalizer.Club["SelectCoordinators"]</label>
                                }
                                @Html.ListBoxFor(m => m.CoordinatorsIds, heroesMultipleSelectList, new { @class = "multiselect form-control small", multiple = "multiple" })
                            </div>
                        }
                    </div>
                    <div class="col-sm-6">
                        @if (heroesSelectList.Count() > 0)
                        {
                            <div class="form-group">
                                <label>@HeroesCupLocalizer.Club["Heroes"]</label>
                                @Html.DropDownListFor(m => m.HeroesIds, heroesMultipleSelectList, new { @class = "form-control small", multiple = "multiple" })
                            </div>
                        }

                        <div class="text-right">
                            @if ((await Auth.AuthorizeAsync(User, ClubsModule.Permissions.HeroesAdd)).Succeeded && Model.Club.Id != Guid.Empty)
                            {
                                <a href="@Url.Action("Add", "Heroes")" class="btn btn-labeled btn-primary pull-right">
                                    <i class="fas fa-plus"></i>@HeroesCupLocalizer.Club["Add Hero"]
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <partial name="_ValidationModal" model="null" />
}